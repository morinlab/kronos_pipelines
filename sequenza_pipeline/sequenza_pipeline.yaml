__PIPELINE_INFO__:
    name: sequenza_pipeline
    version: 1.0.0
    author: bgrande
    data_type: null
    input_type: BAM
    output_type: pileup file
    host_cluster: Genesis
    date_created: Oct 30 2015
    date_last_updated: Oct 30 2015
    factory_version: '1.11.0'


__GENERAL__:
    python: '$$LOHR_PROJECT_HOME/software/pypy-4.0.1/bin/pypy'
    sequenza-utils.py: '$$LOHR_PROJECT_HOME/software/R-3.2.1/lib/R/library/sequenza/exec/sequenza-utils.py'
    samtools: '$$LOHR_PROJECT_HOME/software/samtools/1.2/iuc/package_samtools_1_2/6eea04363026/bin/samtools'
    Rscript: '/usr/bin/Rscript'
    sequenza_analysis.R: '$$LOHR_PROJECT_HOME/software/lab_scripts/generate_sequenza_output/sequenza_analysis.R'


__SHARED__:
    reference: "$$LOHR_PROJECT_HOME/reference/Homo_sapiens_assembly19_EBV.fasta"
    seq_utils: "$$LOHR_PROJECT_HOME/software/R-3.2.1/lib/R/library/sequenza/exec/sequenza-utils.py"
    seq_analyze: "$$LOHR_PROJECT_HOME/software/lab_scripts-5.0/generate_sequenza_output/sequenza_analysis.R"
    gc_ref: "$$LOHR_PROJECT_HOME/reference/GRCh37.gc50Base.txt.gz"
    setup_env: ". /projects/lohr_prj/env.sh"


__SAMPLES__:
    LS1065:
        tumour_bam: "$$LOHR_PROJECT_HOME/data/LS1065.bam"
        normal_bam: "$$LOHR_PROJECT_HOME/data/LS1065N.bam"


__TASK_SEQUENZA_BAM2SEQZ__:
    reserved:
        # do not change this section.
        component_name: 'sequenza_bam2seqz'
        component_version: 'v1.0.0'
        seed_version: '2.1.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '5G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate: ("__SHARED__", "setup_env")
    component:
        input_files:
            tumor: ("__SAMPLES__", "tumour_bam")
            fasta: ("__SHARED__", "reference")
            gc: ("__SHARED__", "gc_ref")
            normal2: '__OPTIONAL__'
            normal: ("__SAMPLES__", "normal_bam")
        output_files:
            output: '1-bam2seqz/$sample_id.seqz.gz'
        parameters:
            het: '__OPTIONAL__'
            hom: '__OPTIONAL__'
            qformat: '__OPTIONAL__'
            'N': '__OPTIONAL__'
            compress_seqz: True
            qlimit: '__OPTIONAL__'
            chromosome: '__OPTIONAL__'


__TASK_SEQUENZA_SEQZBINNING__:
    reserved:
        # do not change this section.
        component_name: 'sequenza_seqzbinning'
        component_version: 'v1.0.0'
        seed_version: '2.1.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '2G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate: ("__SHARED__", "setup_env")
    component:
        input_files:
            seqz: ("__TASK_SEQUENZA_BAM2SEQZ__", "output")
        output_files:
            output: '1-bam2seqz/$sample_id.binned.seqz.gz'
        parameters:
            window: '50'
            compress_seqz: True


__TASK_SEQUENZA_ANALYSIS__:
    reserved:
        # do not change this section.
        component_name: 'sequenza_analysis'
        component_version: 'v1.0.0'
        seed_version: '1.0.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate: ("__SHARED__", "setup_env")
    component:
        input_files:
            input: ("__TASK_SEQUENZA_SEQZBINNING__", "output")
        output_files:
            output: "2-R_analysis/"
        parameters:
            chr: '__OPTIONAL__'
            min_reads: '__OPTIONAL__'
            ploidy_limit: '__OPTIONAL__'
            sample_id: '$sample_id'
            max_cn: '__OPTIONAL__'
            gender: '__OPTIONAL__'
            min_normal_reads: '__OPTIONAL__'
            cellularity_limit: '__OPTIONAL__'
