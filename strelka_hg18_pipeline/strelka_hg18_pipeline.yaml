__PIPELINE_INFO__:
    name: "strelka_hg19_pipeline"
    version: "v1.0.0"
    author: "bgrande"
    data_type:
    input_type: "bam"
    output_type: "maf"
    host_cluster: "genesis"
    date_created: "19 Mar 2015"
    date_last_updated: "19 Mar 2015"
    factory_version: '1.10.2'


__GENERAL__:
    python: "/extscratch/morinlab/projects/MCL_meta_analysis/software/python-2.7.9/bin/python"
    bamutils_bam: "/home/jgrewal/software/bamUtil/bin/bam"
    configureStrelkaWorkflow.pl: "/extscratch/morinlab/projects/MCL_meta_analysis/software/strelka_workflow-1.0.14/bin/configureStrelkaWorkflow.pl"
    perl: "/home/bgrande/software/genesis/ActivePerl-5.18.2.1801/bin/perl"
    variant_effect_predictor.pl: "/home/bgrande/software/genesis/variant_effect_predictor-76/variant_effect_predictor.pl"
    vcf2maf.pl: "/home/bgrande/software/genesis/vcf2maf-1.5.0/vcf2maf.pl"
    samtools: "/extscratch/morinlab/projects/MCL_meta_analysis/software/samtools-0.1.19/bin/samtools"
    make: "/usr/bin/make"


__SHARED__:
    reference: "/extscratch/morinlab/projects/MCL_meta_analysis/reference/hg18_zhang_cohort.fa"
    new_reference: ""
    chain_file: ""
    vep_data_dir: '/extscratch/morinlab/shared/common/.vep/'


__SAMPLES__:
    M003-Tumor-PB2:
        tumour_bam: "/extscratch/morinlab/projects/MCL_meta_analysis/data/bam_alignments/campo_cohort/M003-Tumor-PB2.bam"
        tumour_id: "M003-Tumor-PB2"
        normal_bam: "/extscratch/morinlab/projects/MCL_meta_analysis/data/bam_alignments/campo_cohort/M003-Normal.bam"
        normal_id: "M003-Normal"
        is_genome: True


__TASK_CLIPOVERLAP__:
    reserved:
        # do not change this section.
        component_name: 'clipoverlap'
        component_version: '1.0.0'
        seed_version: '2.16'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '3G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_file: ("__SAMPLES__", "tumour_bam")
        output_files:
            output_file: "tumour.clipoverlap.bam"
        parameters:


__TASK_SAMTOOLS_INDEX__:
    reserved:
        # do not change this section.
        component_name: 'samtools_index'
        component_version: 'v1.0.0'
        seed_version: 'v0.1.19'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            bam_file: ("__TASK_CLIPOVERLAP__", "output_file")
        output_files:
        parameters:


__TASK_STRELKA__:
    reserved:
        # do not change this section.
        component_name: 'strelka'
        component_version: 'v1.0.0'
        seed_version: 'v1.0.14'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '1G'
        num_cpus: 12
        forced_dependencies: ["__TASK_SAMTOOLS_INDEX__"]
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            reference: ("__SHARED__", "reference")
            normal_bam: ("__SAMPLES__", "normal_bam")
            tumour_bam: ("__TASK_CLIPOVERLAP__", "output_file")
        output_files:
            passed_snvs_vcf: "$sample_id.strelka_passed_snvs.vcf"
            output_dir: "$sample_id.strelka_output_dir"
            passed_indels_vcf: "$sample_id.strelka_passed_indels.vcf"
        parameters:
            num_threads: 12
            is_genome: ("__SAMPLES__", "is_genome")


__TASK_SORT_VCF_SNVS__:
    reserved:
        # do not change this section.
        component_name: 'sort_vcf'
        component_version: '1.00.0'
        seed_version: '1.00.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_file: ("__TASK_STRELKA__", "passed_snvs_vcf")
        output_files:
            output_file: "$sample_id.passed_snvs_vcf.sort.vcf"
        parameters:


__TASK_LIFTOVER_VCF_SNVS__:
    reserved:
        # do not change this section.
        component_name: 'liftover_vcf'
        component_version: '1.00.0'
        seed_version: '3.3'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '5G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_vcf: ("__TASK_SORT_VCF_SNVS__", "output_file")
        output_files:
            output_file: "$sample_id.passed_snvs_vcf.sort.liftover.vcf"
        parameters:
            old_ref: ("__SHARED__", "reference")
            new_ref: ("__SHARED__", "new_reference")
            chain_file: ("__SHARED__", "chain_file")


__TASK_ENSEMBL_VEP_SNVS__:
    reserved:
        # do not change this section.
        component_name: 'ensembl_vep'
        component_version: '1.0.0'
        seed_version: 'v76'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '3G'
        num_cpus: 6
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_file: ("__TASK_LIFTOVER_VCF_SNVS__", "output_file")
        output_files:
            output_file: "$sample_id.strelka_passed_snvs.liftover.vep.vcf"
        parameters:
            fork: 6
            assembly: 'GRCh37'
            no_escape: True
            total_length: True
            fasta: ("__SHARED__", "new_reference")
            vcf: True
            xref_refseq: True
            check_existing: True
            allele_number: True
            quiet: True
            everything: True
            gencode_basic: True
            no_stats: True
            offline: True
            dir: ("__SHARED__", "vep_data_dir")


__TASK_VCF2MAF_SNVS__:
    reserved:
        # do not change this section.
        component_name: 'vcf2maf'
        component_version: 'v1.0.0'
        seed_version: 'v1.5.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_vep: ("__TASK_ENSEMBL_VEP_SNVS__", "output_file")
        output_files:
            output_maf: "$sample_id.strelka_passed_snvs.liftover.maf"
        parameters:
            normal_id: ("__SAMPLES__", "normal_id")
            tumour_id: ("__SAMPLES__", "tumour_id")


__TASK_SORT_VCF_INDELS__:
    reserved:
        # do not change this section.
        component_name: 'sort_vcf'
        component_version: '1.00.0'
        seed_version: '1.00.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_file: ("__TASK_STRELKA__", "passed_indels_vcf")
        output_files:
            output_file: "$sample_id.passed_indels_vcf.sort.vcf"
        parameters:


__TASK_LIFTOVER_VCF_INDELS__:
    reserved:
        # do not change this section.
        component_name: 'liftover_vcf'
        component_version: '1.00.0'
        seed_version: '3.3'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: True
        memory: '5G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_vcf: ("__TASK_SORT_VCF_INDELS__", "output_file")
        output_files:
            output_file: "$sample_id.passed_indels_vcf.sort.liftover.vcf"
        parameters:
            old_ref: ("__SHARED__", "reference")
            new_ref: ("__SHARED__", "new_reference")
            chain_file: ("__SHARED__", "chain_file")


__TASK_ENSEMBL_VEP_INDELS__:
    reserved:
        # do not change this section.
        component_name: 'ensembl_vep'
        component_version: '1.0.0'
        seed_version: 'v76'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '3G'
        num_cpus: 6
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_file: ("__TASK_LIFTOVER_VCF_INDELS__", "output_file")
        output_files:
            output_file: "$sample_id.strelka_passed_indels.liftover.vep.vcf"
        parameters:
            fork: 6
            assembly: 'GRCh37'
            no_escape: True
            total_length: True
            fasta: ("__SHARED__", "reference")
            vcf: True
            xref_refseq: True
            check_existing: True
            allele_number: True
            quiet: True
            everything: True
            gencode_basic: True
            no_stats: True
            offline: True
            dir: ("__SHARED__", "vep_data_dir")


__TASK_VCF2MAF_INDELS__:
    reserved:
        # do not change this section.
        component_name: 'vcf2maf'
        component_version: 'v1.0.0'
        seed_version: 'v1.5.0'
    run:
        # NOTE: component cannot run in parallel mode.
        use_cluster: False
        memory: '1G'
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
        boilerplate:
    component:
        input_files:
            input_vep: ("__TASK_ENSEMBL_VEP_INDELS__", "output_file")
        output_files:
            output_maf: "$sample_id.strelka_passed_indels.liftover.maf"
        parameters:
            normal_id: ("__SAMPLES__", "normal_id")
            tumour_id: ("__SAMPLES__", "tumour_id")
